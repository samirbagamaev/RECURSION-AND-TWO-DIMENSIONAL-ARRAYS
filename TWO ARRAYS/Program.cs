// ДВУМЕРНЫЕ МАССИВЫ 

string[,] table = new string [2, 5];
// String.Empty - ЭТО ДЛЯ СТРОК (ПУСТАЯ СТРОКА)
// СТОЛБИКИ: table[0,0] 1 столбик, table[0,1] 2 столбик, table[0,4] 5 столбик 
// СТРОКИ:   table[1,0]  table[1,1]  table[1,4] меняется индекс СТРОКИ

// для обращения к нужному элементу
table[1, 2] = "слово";

// строки - rows
// столбцы - columns
for (int rows = 0; rows < 2; rows++) //rows < 2, так как количество строк равно 2
{
    for (int columns = 0; columns < 5; columns++)
    {
       Console.WriteLine($"-{table[rows, columns]}-");
    }
}



////////////////////////////////////////////////////////////////////////


void PrintArray(int[,] image)
{
   for(int i = 0; i < image.GetLength(0); i++) //можно через i - строки,можно вместо 3 imageix.GetLength(0)
  {
    for(int j = 0; j < image.GetLength(1); j++) //а здесь j - столбцы можно вместо 4 imageix.GetLength(1)
       {
          Console.Write($"{image[i, j]} ");
       }
   Console.WriteLine();    
  }
}

void FillArray (int[,]  image)
{
    for(int i = 0; i < image.GetLength(0); i++)
    {
      for(int j = 0; j < image.GetLength(1); j++)
      {
        image[i,j] = new Random().Next(1,10); //рандомные числа от 1 до 10
      }
    }
}

int [,] imageix = new int[3, 4];
PrintArray(imageix);
FillArray(imageix);
Console.WriteLine();
PrintArray(imageix);


//////////////////////////////////////////////////////////////////////////////////


int[,] pic = new int[,]  
{
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
 {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
 {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
};

void PrintImage(int[,]  image)
{
    for(int i = 0; i < image.GetLength(0); i++)
    {
      for(int j = 0; j < image.GetLength(1); j++)
      {
        //Console.Write($"{image[i, j]} ");
        if(image[i, j] == 0) Console.Write($" ");
        else Console.Write($"+");
      } 
      Console.WriteLine();
    }
}


void FillImage(int row, int col)
{
    if(pic[row, col] == 0)
    {
      pic[row, col] = 1; // можно и другим числом красить
      FillImage(row - 1, col); // идём вверх
      FillImage(row, col - 1); // идём влево
      FillImage(row + 1, col); // идём вниз
      FillImage(row, col + 1); // идём вправо
    }
}


PrintImage(pic);
FillImage(13, 13); // ДОПУСТИМ 13 И 13
PrintImage(pic);








/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////


// РЕКУРСИЯ


// факториал

int Factorial (int n)
{
   // 1! = 1
   // и кстати 0! = 1

   // ОДНОЗНАЧНЫЕ ЧИСЛА
     if(n == 1) return 1;
   else return n * Factorial(n-1);
}

  Console.WriteLine (Factorial(3)); 




// ДЛЯ 2-Х ЗНАЧНЫХ ЧИСЕЛ
double Factorial (int n)
{
if(n == 1) return 1;
   else return n * Factorial(n-1);
}
  for (int i = 1; i < 40; i++) // допустим 2-х значное число 40
{
   Console.WriteLine ($"{i}! = {Factorial(i)}");

} 



///////////////////////////////////////////////////////////////////////

// числа ФИБОНАЧЧИ

// f(1) = 1
// f(2) = 1
// f(n) = f(n-1) + f(n-2)            || = или

int Fibonacci(int n) 
{
    if(n == 1 || n == 2) return 1;
    else return Fibonacci(n-1) + Fibonacci(n-2);
}

for(int i = 1; i < 10; i++) // допустим 10
{
   Console.WriteLine(Fibonacci(i));
} 
// для больших чисел можно использовать double, вместо int
// НО ЭТО ВСЁ ПОТОМ 